{"version":3,"sources":["components/MissingPart/MissingPart.jsx","config.js","utils/socketClient.js","utils/apiCalls.js","containers/MainContainer/MainContainer.jsx","utils/functions.js","components/GroupList/GroupList.jsx","containers/ConfigContainer/ConfigContainer.jsx","containers/EditGroupContainer/EditGroupContainer.jsx","containers/CorridorMapContainer/CorridorMapContainer.jsx","components/Navbar/Navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["MissingPart","_this","this","_this$props$missingPa","props","missingPart","_id","part","buffer","module","date","react_default","a","createElement","className","Moment","format","index_es","color","variant","id","onClick","handleConfirm","Component","CONFIG","socketServer","apiServer","socket","openSocket","getGroups","_callee","url","response","regenerator_default","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","_callee2","result","_context2","getPartsByGroup","_callee3","groupId","_context3","_callee5","_context5","_callee6","group","_context6","window","confirm","delete","_callee7","station","object","_context7","post","_callee8","_context8","MainContainer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handlePartEvent","err","state","then","p","setState","partList","toConsumableArray","console","log","mute","ua","navigator","userAgent","toLowerCase","indexOf","isSafari","beep","load","play","handleTestButton","parameter","pl","concat","topic","find","emit","callback","localStorage","getItem","audio","document","querySelector","location","href","on","_this2","map","key","MissingPart_MissingPart_MissingPart","GroupList","items","_this$props","selectedStation","selectedGroup","g","k","handleClickedGroup","s","k2","handleClickedStation","ConfigContainer","groupList","updateGroupId","e","target","value","handle","saveChanges","setItem","removeItem","orderedGroupList","sort","b","options","toString","htmlFor","onChange","inputProps","name","GroupList_GroupList_GroupList","GroupContainer","stationList","newStation","updateLists","getStations","orderedStationList","addNewStationToGroup","addStationToGroup","removeStationFromGroup","handleNewGroup","addNewGroup","handleRemoveGroup","removeGroup","updateNewStation","_this$state","style","background","Add_default","disabled","Delete_default","display","mini","CorridorMapContainer","src","alt","Navbar","anchorEl","handleClick","event","currentTarget","handleClose","handleReload","reload","open","Boolean","AppBar_default","backgroundColor","position","Toolbar_default","IconButton_default","aria-label","aria-owns","aria-haspopup","icons_Menu_default","Menu_default","onClose","MenuItem_default","Send_default","NavLink","activeClassName","to","primary","Typography_default","App","user","BrowserRouter","Navbar_Navbar","Switch","Route","path","component","EditGroupContainer","Redirect","isLocalhost","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","fetch","status","headers","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7995c588.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport Moment from 'moment';\r\nimport './MissingPart.css';\r\n\r\nexport default class MissingPart extends Component {\r\n  render() {\r\n    const { _id, part, buffer, module, date } = this.props.missingPart;   \r\n    return (\r\n      <div className=\"missing-part-row\">\r\n        <div className=\"missing-part-column mpc-part\"> {part} </div>\r\n        <div className=\"missing-part-column mpc-buffer\"> {buffer} </div>\r\n        <div className=\"missing-part-column mpc-module\"> {module} </div>\r\n        <div className=\"missing-part-column mpc-date\"> {Moment(date).format('DD/MM - hh:mm')} </div>\r\n        <div className=\"missing-part-column\">\r\n          <Button color=\"primary\" variant=\"contained\" id={_id} onClick={() => this.props.handleConfirm(this.props.missingPart)} > CONFIRMAR </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const CONFIG = {\r\n    socketServer: 'http://10.8.66.81:8083',\r\n    apiServer: 'http://10.8.66.81:8083'    \r\n}\r\n\r\n\r\nexport default CONFIG;","import openSocket from 'socket.io-client';\r\nimport CONFIG from '../config';\r\n\r\nconst socket = openSocket(CONFIG.socketServer);\r\n\r\nfunction subscribe(topic, callback) {\r\n    socket.on(topic, data => callback(null, data));\r\n}\r\n\r\nfunction emit(topic, data) {\r\n    socket.emit(topic, data);\r\n}\r\n\r\nexport { subscribe, emit }","import axios from 'axios';\r\nimport CONFIG from '../config';\r\n\r\n\r\nasync function getGroups() {\r\n    const url = CONFIG.apiServer + '/api/groups';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n}\r\n\r\nasync function getStations() {\r\n    const url = '/assets/data/stations.json';\r\n    const result = await axios.get(url);\r\n    return result.data;\r\n}\r\n\r\nasync function getPartsByGroup(groupId) {\r\n    const url = CONFIG.apiServer + '/api/groups/' + groupId;\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n}\r\n\r\nasync function getPartsByBuffer(buffer) {\r\n    const url = CONFIG.apiServer;\r\n    const result = await axios.get(url);\r\n    return result.data;\r\n}\r\n\r\nasync function addNewGroup() {\r\n    const result = await axios.get(CONFIG.apiServer + '/api/groups/create');\r\n    return result.data;\r\n};\r\n\r\nasync function removeGroup(group) {\r\n    const q = window.confirm('Deseja mesmo excluir este grupo?');\r\n    if (!q) return;\r\n    const result = await axios.delete(CONFIG.apiServer + '/api/groups/' + group)\r\n    return result.data;\r\n}\r\n\r\n\r\nasync function addStationToGroup(group, station) {\r\n    const object = {\r\n        _id: group,\r\n        station: station\r\n    }\r\n    const url = CONFIG.apiServer + '/api/station';\r\n    const result = await axios.post(url, object);\r\n    return result.data;\r\n}\r\n\r\nasync function removeStationFromGroup(group, station) {\r\n    const url = CONFIG.apiServer + '/api/station';\r\n    const object = {\r\n        data: {\r\n            _id: group,\r\n            station: station\r\n        }\r\n    }\r\n    const result = await axios.delete(url, object);\r\n    return result.data;\r\n}\r\n\r\n// const functions = [\r\n//     addNewGroup,\r\n//     getGroups,\r\n//     getStations,\r\n//     getPartsByGroup,\r\n//     getPartsByBuffer,\r\n//     removeGroup,\r\n//     addStationToGroup,\r\n//     removeStationFromGroup\r\n// ]\r\n\r\n// // console.log(functions);\r\n\r\nexport {\r\n    getGroups,\r\n    getStations,\r\n    getPartsByBuffer,\r\n    getPartsByGroup,\r\n    addNewGroup,\r\n    addStationToGroup,\r\n    removeGroup,\r\n    removeStationFromGroup\r\n}\r\n","import React, { Component } from 'react';\r\nimport MissingPart from '../../components/MissingPart';\r\n\r\nimport { isSafari } from '../../utils/functions';\r\nimport { emit, subscribe } from '../../utils/socketClient';\r\n\r\nimport './MainContainer.css';\r\n\r\n// import TestButton from '../../components/TestButton';\r\n\r\nimport { getPartsByGroup } from '../../utils/apiCalls';\r\n\r\nexport default class MainContainer extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        const groupId = localStorage.getItem('groupId');\r\n        this.audio = window.document.querySelector('audio');\r\n        this.beep = window.document.querySelector('#beep');\r\n\r\n        if (groupId === null) {\r\n            window.location.href = '/config';\r\n        }\r\n\r\n        this.state = {\r\n            groupId: +groupId,\r\n            partList: []\r\n        };\r\n\r\n        getPartsByGroup(this.state.groupId).then(p => this.setState({ partList: [...p] }));\r\n\r\n        subscribe('list update', this.handlePartEvent);\r\n    }\r\n\r\n    handlePartEvent = (err, data) => {\r\n        // this.audio.load();                \r\n        getPartsByGroup(this.state.groupId).then(p => this.setState({ partList: [...p] }));\r\n        if (data) {\r\n            console.log('Data received from socket:', data);\r\n            if (!data.mute) {\r\n                if (isSafari()) {\r\n                    this.beep.load();\r\n                    this.beep.play();\r\n                }\r\n                // document.querySelector('#test-button').click()\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTestButton = (parameter) => {\r\n        // this.audio.play();\r\n        this.beep.play();\r\n\r\n        const pl = [...this.state.partList, parameter];\r\n        this.setState({\r\n            partList: pl\r\n        })\r\n        console.log(parameter);\r\n    }\r\n\r\n    handleConfirm = (missingPart) => {\r\n        let part = this.state.partList.find(p => p._id === missingPart._id);\r\n        if (!part) {\r\n            part = {\r\n                _id: 0\r\n            }\r\n        }\r\n        emit('confirm part', part);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n\r\n                <div className=\"group-id-title\" > GRUPO {this.state.groupId}</div>\r\n                <div className=\"header\" >\r\n                    <div> PEÇA </div>\r\n                    <div> BUFFER </div>\r\n                    <div> MODULO </div>\r\n                    <div> DATA </div>\r\n                    <div>  </div>\r\n                </div>\r\n                <div className=\"missing-part-container\">\r\n                    {\r\n                        this.state.partList.map((p, key) => <MissingPart id={key} key={key} missingPart={p} handleConfirm={this.handleConfirm} />)\r\n                    }\r\n                </div>\r\n                {/* <TestButton handleTestButton={this.handleTestButton} /> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n","function isSafari() {\r\n    const ua = navigator.userAgent.toLowerCase();\r\n    if (ua.indexOf('safari') !== -1) {\r\n        if (ua.indexOf('chrome') > -1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    isSafari\r\n}","import React, { Component } from 'react';\r\n// import { Button } from '@material-ui/core';\r\n\r\nimport './GroupList.css';\r\n\r\nexport default class GroupList extends Component {\r\n\r\n  render() {\r\n    const { items } = this.props;\r\n    const { selectedStation, selectedGroup } = this.props;\r\n    return (\r\n      <div className=\"available-groups-container\">\r\n        <div className=\"group-title\"> GRUPOS </div>\r\n        <div className=\"groups-container-body\">\r\n          {\r\n            items.map((g, k) => {\r\n              return (\r\n                <div key={k} className=\"group-wrapper\">\r\n                  <div\r\n                    className={selectedGroup === g._id ? 'group-header group-header-selected' : 'group-header'}\r\n                    onClick={() => this.props.handleClickedGroup(g._id)}\r\n                  >\r\n                    GRUPO {g._id}\r\n                  </div>\r\n                  {\r\n                    g.station.map((s, k2) => {\r\n                      return (                        \r\n                          <div\r\n                            key={k2}\r\n                            className={selectedStation === s && selectedGroup === g._id ? 'group-station group-station-selected' : 'group-station'}\r\n                            onClick={() => this.props.handleClickedStation(s, g._id)}\r\n                          >\r\n                            {s}\r\n                          </div>                        \r\n                        \r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\r\n\r\nimport { getGroups } from '../../utils/apiCalls';\r\nimport GroupList from '../../components/GroupList';\r\n\r\nimport './ConfigContainer.css';\r\n\r\nexport default class ConfigContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    localStorage.removeItem('groupId');\r\n  }\r\n\r\n  state = {\r\n    groupId: 0,\r\n    groupList: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    getGroups().then(groupList => {\r\n      const orderedGroupList = groupList.sort((a, b) => a._id > b._id);\r\n        this.setState({ groupList: [...orderedGroupList] })\r\n    });\r\n    \r\n  }\r\n\r\n  updateGroupId = (e) => {\r\n    this.setState({\r\n      groupId: e.target.value\r\n    });\r\n  }\r\n\r\n  handle = () => {\r\n    \r\n  }\r\n\r\n  saveChanges = () => {\r\n    localStorage.setItem('groupId', this.state.groupId);\r\n    window.location.href = '/';\r\n  }\r\n\r\n  render() {\r\n    const { groupList } = this.state;\r\n    // const options = groupList.map((g, key) => <option key={key}> {g._id} </option>);\r\n    const options = groupList.map((g, key) => <MenuItem key={key} value={+g._id}>{g._id.toString()}</MenuItem>);\r\n    return (\r\n\r\n      <div className=\"config-container\" >\r\n        <div className=\"group-selection\">\r\n          <FormControl className=\"group-select\">\r\n            <InputLabel htmlFor=\"group-select\"> SELECIONE UM GRUPO</InputLabel>\r\n            <Select\r\n              value={this.state.groupId}\r\n              onChange={this.updateGroupId}\r\n              inputProps={{ name: 'group', id: 'group-select' }} >\r\n              {options}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Button color=\"primary\" variant=\"contained\" onClick={this.saveChanges} >SALVAR </Button>\r\n\r\n        </div>\r\n\r\n        <GroupList\r\n          items={groupList}\r\n          handleClickedGroup={this.handle}\r\n          handleClickedStation={this.handle}\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Button, Select, FormControl, MenuItem } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { \r\n  getGroups, \r\n  getStations, \r\n  addNewGroup, \r\n  addStationToGroup, \r\n  removeStationFromGroup, \r\n  removeGroup } from '../../utils/apiCalls';\r\n\r\nimport GroupList from '../../components/GroupList';\r\n\r\nimport './EditGroupContainer.css';\r\n\r\nexport default class GroupContainer extends Component {\r\n\r\n  state = {\r\n    groupId: 0,\r\n    groupList: [],\r\n    stationList: [],\r\n    selectedGroup: null,\r\n    selectedStation: null,\r\n    newStation: 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateLists();\r\n  }\r\n\r\n  updateLists = () => {\r\n    getGroups().then((groupList) => {\r\n      const orderedGroupList = groupList.sort((a, b) => a._id > b._id);\r\n      this.setState({ groupList: [...orderedGroupList], selectedGroup: null })\r\n    });\r\n    getStations().then((stationList) => {\r\n      const orderedStationList = stationList.sort((a, b) => a.id > b.id);\r\n      this.setState({ stationList: [...orderedStationList], selectedStation: null })\r\n    })\r\n  }\r\n\r\n  addNewStationToGroup = () => {\r\n    addStationToGroup(this.state.selectedGroup, this.state.newStation).then(this.updateLists);\r\n  }\r\n\r\n  removeStationFromGroup = () => {\r\n    removeStationFromGroup(this.state.selectedGroup, this.state.selectedStation).then(this.updateLists);\r\n  }\r\n\r\n  handleNewGroup = () => {\r\n    addNewGroup().then(this.updateLists);\r\n  }\r\n\r\n  handleRemoveGroup = () => {\r\n    const group = this.state.selectedGroup;\r\n    removeGroup(group).then(this.updateLists);\r\n  }\r\n\r\n  updateNewStation = (e) => {\r\n    this.setState({ newStation: +e.target.value })\r\n  }\r\n\r\n  handleClickedGroup = (selectedGroup) => {\r\n    this.setState(\r\n      {\r\n        selectedGroup,\r\n        selectedStation: null\r\n      }\r\n    )\r\n  }\r\n\r\n  handleClickedStation = (selectedStation, selectedGroup) => {\r\n    this.setState(\r\n      { selectedStation, selectedGroup }\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    const { groupList, selectedGroup, stationList, selectedStation, newStation } = this.state;\r\n    const options = stationList.map((s, k) => <MenuItem key={k} value={s.id} > {s.id} </MenuItem>);\r\n    return (\r\n      <div className=\"edit-group-container\">\r\n\r\n        <div className=\"edit-group-button-container\">\r\n          <div className=\"edit-group-button\">\r\n            <div className=\"edit-group-button-title\" > ADICIONAR NOVO GRUPO </div>\r\n            <div className=\"edit-group-button-element\">\r\n              <Button variant=\"fab\" style={{ background: 'limegreen', color: 'white' }} onClick={this.handleNewGroup}>\r\n                <AddIcon />\r\n              </Button>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"edit-group-button\">\r\n            <div className=\"edit-group-button-title\" > REMOVER GRUPO </div>\r\n            <div className=\"edit-group-button-element\">\r\n              <Button disabled={selectedGroup === null} variant=\"fab\" color=\"secondary\" onClick={this.handleRemoveGroup}>\r\n                <DeleteIcon />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"edit-station-container\" style={{ display: selectedGroup === null ? '' : null }}>\r\n\r\n          <div className=\"edit-station-button-title\">EDITAR POSTOS</div>\r\n\r\n          <FormControl className=\"edit-station-select\">\r\n            <Select\r\n              value={newStation}\r\n              onChange={this.updateNewStation}\r\n            >\r\n              {options}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <div className=\"edit-station-button-container\">\r\n            <Button variant=\"fab\" mini color=\"primary\" onClick={this.addNewStationToGroup} disabled={this.state.selectedGroup === null}>\r\n              <AddIcon />\r\n            </Button>\r\n            <Button variant=\"fab\" mini color=\"secondary\" onClick={this.removeStationFromGroup} disabled={this.state.selectedStation === null}>\r\n              <DeleteIcon />\r\n            </Button>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        <GroupList\r\n          handleClickedGroup={this.handleClickedGroup}\r\n          handleClickedStation={this.handleClickedStation}\r\n          items={groupList}\r\n          stationList={stationList}\r\n          selectedStation={selectedStation}\r\n          selectedGroup={selectedGroup}\r\n        />\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\n// async function getStations() {\r\n//   return await fetch('/assets/data/stations.json')\r\n//     .then((res) => res.json())\r\n// }\r\n\r\n","import React, { Component } from 'react'\r\n\r\nimport './CorridorMapContainer.css';\r\n\r\nexport default class CorridorMapContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"corridor-map-container\">\r\n        <div className=\"corridor\">\r\n            <img src=\"/assets/images/P27.png\" alt=\"P27\"/>\r\n        </div>\r\n        <div className=\"corridor\">\r\n            <img src=\"/assets/images/P30.png\" alt=\"P30\"/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nexport default class Navbar extends Component {\r\n\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleReload = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        const { anchorEl } = this.state;\r\n        const open = Boolean(anchorEl);\r\n\r\n        return (\r\n            <div className=\"app-bar\">\r\n                <AppBar style={{ backgroundColor: '#393840' }} position=\"sticky\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            aria-label=\"Menu\"\r\n                            aria-owns={open ? 'main-menu' : null}\r\n                            color=\"inherit\" onClick={this.handleClick} aria-haspopup=\"true\">\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n\r\n                        <Menu id=\"main-menu\" anchorEl={anchorEl} open={open} onClose={this.handleClose} >\r\n                        \r\n                            <MenuItem onClick={this.handleClose}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon />\r\n                                </ListItemIcon>\r\n\r\n                                <NavLink className=\"not-selected\" activeClassName=\"selected\" to=\"/home\">\r\n                                    <ListItemText  primary=\"INICIO\" />\r\n                                </NavLink>\r\n                            </MenuItem>\r\n\r\n                            <MenuItem onClick={this.handleClose} >\r\n                                <NavLink className=\"not-selected\" activeClassName=\"selected\" to=\"/config\" >\r\n                                DISPOSITIVO\r\n                                </NavLink>\r\n                            </MenuItem>\r\n                            <MenuItem onClick={this.handleClose} >\r\n                                <NavLink className=\"not-selected\" activeClassName=\"selected\" to=\"/groups\" >GRUPOS</NavLink>\r\n                            </MenuItem>\r\n                            <MenuItem onClick={this.handleClose} >\r\n                                <NavLink className=\"not-selected\" activeClassName=\"selected\" to=\"/corredores\" >CORREDORES</NavLink>\r\n                            </MenuItem>\r\n                            <MenuItem onClick={this.handleClose}>\r\n                                SOBRE\r\n                            </MenuItem>\r\n                            <MenuItem onClick={this.handleReload}>\r\n                                RECARREGAR\r\n                            </MenuItem>\r\n                        </Menu>\r\n\r\n                        <Typography variant=\"h6\" color=\"inherit\" >\r\n                            LOGISTICS CALL\r\n                        </Typography>\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nimport MainContainer from './containers/MainContainer';\nimport ConfigContainer from './containers/ConfigContainer/';\nimport EditGroupContainer from './containers/EditGroupContainer';\nimport CorridorMapContainer from './containers/CorridorMapContainer/CorridorMapContainer';\n\n\nimport './App.css';\nimport Navbar from './components/Navbar';\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: localStorage.getItem('user'),\n      groupId: +localStorage.getItem('groupId')\n    }\n  }\n\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"main-container\">\n          <Navbar />\n          <div className=\"content-container\">\n            <Switch>\n              <Route path=\"/home\" component={MainContainer} />\n              <Route path=\"/config\" component={ConfigContainer} />\n              <Route path=\"/corredores\" component={CorridorMapContainer} />\n              <Route path=\"/groups\" component={EditGroupContainer} />\n              {\n                this.state.groupId == null\n                  ? <Redirect to=\"/config\" />\n                  : <Redirect to=\"/home\" />\n              }\n\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n\n}\n\n// class AllRoutes extends Component {\n//   render() {\n//     return (\n\n//     );\n//   }\n// }\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}